<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hotelreservationapi.mappers.UserMapper">
    <resultMap id="UserResultMap" type="com.example.hotelreservationapi.domains.User">
        <result column="id" property="id"/>
        <result column="login" property="login"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="surname" property="surname"/>
        <result column="middlename" property="middlename"/>
        <result column="email" property="email"/>
    </resultMap>
    <!--<resultMap id="RoleResultMap" type="com.example.springwebproject.domain.Role">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>-->

    <select id="readById" resultMap="UserResultMap">
        select *
        from users
        where id = #{id}
    </select>

    <select id="readAll" resultMap="UserResultMap">
        select id, login, password, name, surname, middlename, email
        from users
    </select>

    <insert id="create">
        insert into users(login, password, name, surname, middlename, email)
        values (#{user.login},#{user.password}, #{user.name}, #{user.surname}, #{user.middlename}, #{user.email});
    </insert>

    <delete id="delete">
        delete
        from users
        where id = #{id}
    </delete>

    <update id="update">
        UPDATE users
        SET password   = #{user.password},
            name       = #{user.name},
            surname    = #{user.surname},
            middlename = #{user.middlename},
            email      = #{user.email}
        WHERE id = #{user.id};
    </update>

</mapper>