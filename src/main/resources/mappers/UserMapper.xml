<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hotelreservationapi.mappers.UserMapper">
    <resultMap id="UserResultMap" type="com.example.hotelreservationapi.domains.User">
        <result column="id" property="id"/>
        <result column="login" property="login"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="surname" property="surname"/>
        <result column="middlename" property="middlename"/>
        <result column="email" property="email"/>
        <collection property="roles" ofType="com.example.hotelreservationapi.domains.Role"
                    javaType="java.util.ArrayList">
            <id property="id" column="rId"/>
            <result property="name" column="rName"/>
        </collection>

    </resultMap>

    <select id="readById" resultMap="UserResultMap">
        SELECT users.*, roles.id AS rId, roles.name AS rName
        FROM users,
             roles,
             users_roles
        WHERE users.id = #{id}
          AND users.id = users_roles.user_id
          AND roles.id = users_roles.role_id
    </select>

    <select id="readByLogin" resultMap="UserResultMap">
        SELECT users.*, roles.id AS rId, roles.name AS rName
        FROM users,
             roles,
             users_roles
        WHERE users.login = #{login}
          AND users.id = users_roles.user_id
          AND roles.id = users_roles.role_id
    </select>

    <select id="readAll" resultMap="UserResultMap">
        SELECT users.id,
               users.login,
               users.password,
               users.name,
               users.surname,
               users.middlename,
               users.email,
               roles.id   AS rId,
               roles.name AS rName
        FROM users,
             roles,
             users_roles
        WHERE users.id = users_roles.user_id
          AND roles.id = users_roles.role_id
    </select>

    <select id="create" resultType="int">
        INSERT INTO users(login, password, name, surname, middlename, email)
        VALUES (#{user.login}, #{user.password}, #{user.name}, #{user.surname}, #{user.middlename},
                #{user.email}) RETURNING id
    </select>

    <delete id="delete">
        DELETE
        FROM users
        WHERE id = #{id}
    </delete>

    <update id="update">
        UPDATE users
        SET password   = #{user.password},
            name       = #{user.name},
            surname    = #{user.surname},
            middlename = #{user.middlename},
            email      = #{user.email}
        WHERE id = #{user.id};
    </update>

</mapper>